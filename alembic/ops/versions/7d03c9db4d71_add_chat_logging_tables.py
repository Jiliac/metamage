"""add chat logging tables

Revision ID: 7d03c9db4d71
Revises: 1d6a2386724e
Create Date: 2025-08-30 11:27:08.838594

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision: str = '7d03c9db4d71'
down_revision: Union[str, Sequence[str], None] = '1d6a2386724e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create chat_sessions table
    op.create_table('chat_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create chat_messages table
    op.create_table('chat_messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], name='fk_chat_message_session'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_sequence_order'), 'chat_messages', ['sequence_order'], unique=False)
    op.create_index(op.f('ix_chat_messages_session_id'), 'chat_messages', ['session_id'], unique=False)
    
    # Create tool_calls table
    op.create_table('tool_calls',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('input_params', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('call_id', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], name='fk_tool_call_message'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tool_calls', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tool_calls_call_id'), ['call_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tool_calls_message_id'), ['message_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tool_calls_tool_name'), ['tool_name'], unique=False)

    op.create_table('tool_results',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tool_call_id', sa.String(length=36), nullable=False),
    sa.Column('result_content', postgresql.JSONB(astext_type=Text()), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['tool_call_id'], ['tool_calls.id'], name='fk_tool_result_call'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tool_results', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tool_results_tool_call_id'), ['tool_call_id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tool_results', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tool_results_tool_call_id'))

    op.drop_table('tool_results')
    with op.batch_alter_table('tool_calls', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tool_calls_tool_name'))
        batch_op.drop_index(batch_op.f('ix_tool_calls_message_id'))
        batch_op.drop_index(batch_op.f('ix_tool_calls_call_id'))

    op.drop_table('tool_calls')
    # ### end Alembic commands ###
