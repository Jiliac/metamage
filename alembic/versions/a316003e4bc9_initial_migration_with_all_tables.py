"""Initial migration with all tables

Revision ID: a316003e4bc9
Revises:
Create Date: 2025-08-09 10:11:03.410672

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a316003e4bc9"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "archetypes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", models.reference.CaseInsensitiveText(length=100), nullable=False
        ),
        sa.Column("color", sa.String(length=10), nullable=True),
        sa.Column("companion", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "cards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", models.reference.CaseInsensitiveText(length=200), nullable=False
        ),
        sa.Column("scryfall_oracle_id", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_card_name", "cards", ["name"], unique=False)
    op.create_index("idx_card_oracle_id", "cards", ["scryfall_oracle_id"], unique=False)
    op.create_index(op.f("ix_cards_name"), "cards", ["name"], unique=False)
    op.create_index(
        op.f("ix_cards_scryfall_oracle_id"),
        "cards",
        ["scryfall_oracle_id"],
        unique=True,
    )
    op.create_table(
        "formats",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", models.reference.CaseInsensitiveText(length=100), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "players",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("handle", sa.String(length=100), nullable=False),
        sa.Column(
            "normalized_handle",
            models.reference.CaseInsensitiveText(length=100),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_player_normalized_handle", "players", ["normalized_handle"], unique=False
    )
    op.create_index(
        op.f("ix_players_normalized_handle"),
        "players",
        ["normalized_handle"],
        unique=False,
    )
    op.create_table(
        "meta_changes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("format_id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("change_type", sa.String(length=20), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("card_name", sa.String(length=200), nullable=True),
        sa.Column("set_code", sa.String(length=10), nullable=True),
        sa.ForeignKeyConstraint(
            ["format_id"],
            ["formats.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_meta_change_format_date",
        "meta_changes",
        ["format_id", "date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_meta_changes_date"), "meta_changes", ["date"], unique=False
    )
    op.create_index(
        op.f("ix_meta_changes_format_id"), "meta_changes", ["format_id"], unique=False
    )
    op.create_table(
        "tournaments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("format_id", sa.Integer(), nullable=False),
        sa.Column(
            "source",
            sa.Enum("MTGO", "MELEE", "OTHER", name="tournamentsource"),
            nullable=False,
        ),
        sa.Column("link", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["format_id"],
            ["formats.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_tournament_date_format", "tournaments", ["date", "format_id"], unique=False
    )
    op.create_index(op.f("ix_tournaments_date"), "tournaments", ["date"], unique=False)
    op.create_index(
        op.f("ix_tournaments_format_id"), "tournaments", ["format_id"], unique=False
    )
    op.create_index(op.f("ix_tournaments_name"), "tournaments", ["name"], unique=False)
    op.create_table(
        "tournament_entries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tournament_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("archetype_id", sa.Integer(), nullable=False),
        sa.Column("wins", sa.Integer(), nullable=False),
        sa.Column("losses", sa.Integer(), nullable=False),
        sa.Column("draws", sa.Integer(), nullable=False),
        sa.Column("decklist_url", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["archetype_id"],
            ["archetypes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tournament_id"],
            ["tournaments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tournament_id", "player_id", name="uq_tournament_player"),
    )
    op.create_index(
        "idx_entry_archetype", "tournament_entries", ["archetype_id"], unique=False
    )
    op.create_index(
        "idx_entry_tournament_player",
        "tournament_entries",
        ["tournament_id", "player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_tournament_entries_archetype_id"),
        "tournament_entries",
        ["archetype_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_tournament_entries_player_id"),
        "tournament_entries",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_tournament_entries_tournament_id"),
        "tournament_entries",
        ["tournament_id"],
        unique=False,
    )
    op.create_table(
        "deck_cards",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=False),
        sa.Column("card_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("board", sa.Enum("MAIN", "SIDE", name="boardtype"), nullable=False),
        sa.ForeignKeyConstraint(
            ["card_id"],
            ["cards.id"],
        ),
        sa.ForeignKeyConstraint(
            ["entry_id"],
            ["tournament_entries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("entry_id", "card_id", "board", name="uq_entry_card_board"),
    )
    op.create_index(
        "idx_deck_card_entry_board", "deck_cards", ["entry_id", "board"], unique=False
    )
    op.create_index(
        op.f("ix_deck_cards_card_id"), "deck_cards", ["card_id"], unique=False
    )
    op.create_index(
        op.f("ix_deck_cards_entry_id"), "deck_cards", ["entry_id"], unique=False
    )
    op.create_table(
        "matches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=False),
        sa.Column("opponent_entry_id", sa.Integer(), nullable=False),
        sa.Column(
            "result", sa.Enum("WIN", "LOSS", "DRAW", name="matchresult"), nullable=False
        ),
        sa.Column("mirror", sa.Boolean(), nullable=False),
        sa.Column("pair_id", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["entry_id"],
            ["tournament_entries.id"],
        ),
        sa.ForeignKeyConstraint(
            ["opponent_entry_id"],
            ["tournament_entries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_match_entry_opponent",
        "matches",
        ["entry_id", "opponent_entry_id"],
        unique=False,
    )
    op.create_index("idx_match_pair_id", "matches", ["pair_id"], unique=False)
    op.create_index(op.f("ix_matches_entry_id"), "matches", ["entry_id"], unique=False)
    op.create_index(
        op.f("ix_matches_opponent_entry_id"),
        "matches",
        ["opponent_entry_id"],
        unique=False,
    )
    op.create_index(op.f("ix_matches_pair_id"), "matches", ["pair_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_matches_pair_id"), table_name="matches")
    op.drop_index(op.f("ix_matches_opponent_entry_id"), table_name="matches")
    op.drop_index(op.f("ix_matches_entry_id"), table_name="matches")
    op.drop_index("idx_match_pair_id", table_name="matches")
    op.drop_index("idx_match_entry_opponent", table_name="matches")
    op.drop_table("matches")
    op.drop_index(op.f("ix_deck_cards_entry_id"), table_name="deck_cards")
    op.drop_index(op.f("ix_deck_cards_card_id"), table_name="deck_cards")
    op.drop_index("idx_deck_card_entry_board", table_name="deck_cards")
    op.drop_table("deck_cards")
    op.drop_index(
        op.f("ix_tournament_entries_tournament_id"), table_name="tournament_entries"
    )
    op.drop_index(
        op.f("ix_tournament_entries_player_id"), table_name="tournament_entries"
    )
    op.drop_index(
        op.f("ix_tournament_entries_archetype_id"), table_name="tournament_entries"
    )
    op.drop_index("idx_entry_tournament_player", table_name="tournament_entries")
    op.drop_index("idx_entry_archetype", table_name="tournament_entries")
    op.drop_table("tournament_entries")
    op.drop_index(op.f("ix_tournaments_name"), table_name="tournaments")
    op.drop_index(op.f("ix_tournaments_format_id"), table_name="tournaments")
    op.drop_index(op.f("ix_tournaments_date"), table_name="tournaments")
    op.drop_index("idx_tournament_date_format", table_name="tournaments")
    op.drop_table("tournaments")
    op.drop_index(op.f("ix_meta_changes_format_id"), table_name="meta_changes")
    op.drop_index(op.f("ix_meta_changes_date"), table_name="meta_changes")
    op.drop_index("idx_meta_change_format_date", table_name="meta_changes")
    op.drop_table("meta_changes")
    op.drop_index(op.f("ix_players_normalized_handle"), table_name="players")
    op.drop_index("idx_player_normalized_handle", table_name="players")
    op.drop_table("players")
    op.drop_table("formats")
    op.drop_index(op.f("ix_cards_scryfall_oracle_id"), table_name="cards")
    op.drop_index(op.f("ix_cards_name"), table_name="cards")
    op.drop_index("idx_card_oracle_id", table_name="cards")
    op.drop_index("idx_card_name", table_name="cards")
    op.drop_table("cards")
    op.drop_table("archetypes")
    # ### end Alembic commands ###
