"""Initial migration with timestamps

Revision ID: 689545bc6892
Revises: 
Create Date: 2025-08-09 14:53:02.247543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '689545bc6892'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('archetypes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('color', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_archetype_name')
    )
    op.create_table('cards',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('scryfall_oracle_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cards_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_cards_scryfall_oracle_id'), ['scryfall_oracle_id'], unique=True)

    op.create_table('formats',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='uq_format_name')
    )
    op.create_table('players',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('handle', sa.String(length=100), nullable=False),
    sa.Column('normalized_handle', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_players_normalized_handle'), ['normalized_handle'], unique=False)

    op.create_table('meta_changes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('format_id', sa.String(length=36), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('change_type', sa.Enum('BAN', 'SET_RELEASE', name='changetype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('set_code', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['format_id'], ['formats.id'], name='fk_meta_changes_format'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('meta_changes', schema=None) as batch_op:
        batch_op.create_index('idx_meta_change_format_date', ['format_id', 'date'], unique=False)
        batch_op.create_index(batch_op.f('ix_meta_changes_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_meta_changes_format_id'), ['format_id'], unique=False)

    op.create_table('tournaments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('format_id', sa.String(length=36), nullable=False),
    sa.Column('source', sa.Enum('MTGO', 'MELEE', 'OTHER', name='tournamentsource'), nullable=False),
    sa.Column('link', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['format_id'], ['formats.id'], name='fk_tournaments_format'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tournaments', schema=None) as batch_op:
        batch_op.create_index('idx_tournament_date_format', ['date', 'format_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournaments_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournaments_format_id'), ['format_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournaments_name'), ['name'], unique=False)

    op.create_table('tournament_entries',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tournament_id', sa.String(length=36), nullable=False),
    sa.Column('player_id', sa.String(length=36), nullable=False),
    sa.Column('archetype_id', sa.String(length=36), nullable=False),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.Column('losses', sa.Integer(), nullable=False),
    sa.Column('draws', sa.Integer(), nullable=False),
    sa.Column('decklist_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['archetype_id'], ['archetypes.id'], name='fk_tournament_entries_archetype'),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], name='fk_tournament_entries_player'),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], name='fk_tournament_entries_tournament'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tournament_id', 'player_id', name='uq_tournament_player')
    )
    with op.batch_alter_table('tournament_entries', schema=None) as batch_op:
        batch_op.create_index('idx_entry_tournament_player', ['tournament_id', 'player_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournament_entries_archetype_id'), ['archetype_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournament_entries_player_id'), ['player_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournament_entries_tournament_id'), ['tournament_id'], unique=False)

    op.create_table('deck_cards',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('entry_id', sa.String(length=36), nullable=False),
    sa.Column('card_id', sa.String(length=36), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('board', sa.Enum('MAIN', 'SIDE', name='boardtype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], name='fk_deck_cards_card'),
    sa.ForeignKeyConstraint(['entry_id'], ['tournament_entries.id'], name='fk_deck_cards_entry'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('entry_id', 'card_id', 'board', name='uq_entry_card_board')
    )
    with op.batch_alter_table('deck_cards', schema=None) as batch_op:
        batch_op.create_index('idx_deck_card_entry_board', ['entry_id', 'board'], unique=False)
        batch_op.create_index(batch_op.f('ix_deck_cards_card_id'), ['card_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_deck_cards_entry_id'), ['entry_id'], unique=False)

    op.create_table('matches',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('entry_id', sa.String(length=36), nullable=False),
    sa.Column('opponent_entry_id', sa.String(length=36), nullable=False),
    sa.Column('result', sa.Enum('WIN', 'LOSS', 'DRAW', name='matchresult'), nullable=False),
    sa.Column('mirror', sa.Boolean(), nullable=False),
    sa.Column('pair_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['tournament_entries.id'], name='fk_matches_entry'),
    sa.ForeignKeyConstraint(['opponent_entry_id'], ['tournament_entries.id'], name='fk_matches_opponent_entry'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.create_index('idx_match_entry_opponent', ['entry_id', 'opponent_entry_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_matches_entry_id'), ['entry_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_matches_opponent_entry_id'), ['opponent_entry_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_matches_pair_id'), ['pair_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_matches_pair_id'))
        batch_op.drop_index(batch_op.f('ix_matches_opponent_entry_id'))
        batch_op.drop_index(batch_op.f('ix_matches_entry_id'))
        batch_op.drop_index('idx_match_entry_opponent')

    op.drop_table('matches')
    with op.batch_alter_table('deck_cards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_deck_cards_entry_id'))
        batch_op.drop_index(batch_op.f('ix_deck_cards_card_id'))
        batch_op.drop_index('idx_deck_card_entry_board')

    op.drop_table('deck_cards')
    with op.batch_alter_table('tournament_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tournament_entries_tournament_id'))
        batch_op.drop_index(batch_op.f('ix_tournament_entries_player_id'))
        batch_op.drop_index(batch_op.f('ix_tournament_entries_archetype_id'))
        batch_op.drop_index('idx_entry_tournament_player')

    op.drop_table('tournament_entries')
    with op.batch_alter_table('tournaments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tournaments_name'))
        batch_op.drop_index(batch_op.f('ix_tournaments_format_id'))
        batch_op.drop_index(batch_op.f('ix_tournaments_date'))
        batch_op.drop_index('idx_tournament_date_format')

    op.drop_table('tournaments')
    with op.batch_alter_table('meta_changes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meta_changes_format_id'))
        batch_op.drop_index(batch_op.f('ix_meta_changes_date'))
        batch_op.drop_index('idx_meta_change_format_date')

    op.drop_table('meta_changes')
    with op.batch_alter_table('players', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_players_normalized_handle'))

    op.drop_table('players')
    op.drop_table('formats')
    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cards_scryfall_oracle_id'))
        batch_op.drop_index(batch_op.f('ix_cards_name'))

    op.drop_table('cards')
    op.drop_table('archetypes')
    # ### end Alembic commands ###
